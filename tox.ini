[tox]

[docker:fireflyiii_postgres]

image=postgres:15.3

environment=
  POSTGRES_PASSWORD=secret
  POSTGRES_USER=fireflyiii
  POSTGRES_DB=fireflyiii

healthcheck_cmd = \
    PGPASSWORD=$POSTGRES_PASSWORD psql \
    --user=fireflyiii \
    --dbname=fireflyiii \
    --host=127.0.0.1 \
    --quiet \
    --no-align \
    --tuples-only \
    -1 \
    --command="SELECT 1" \

healthcheck_interval = 0.1
healthcheck_retries = 100

[docker:n8n_postgres]

image=postgres:15.3

environment=
  POSTGRES_PASSWORD=secret
  POSTGRES_USER=n8n
  POSTGRES_DB=n8n

healthcheck_cmd = \
    PGPASSWORD=$POSTGRES_PASSWORD psql \
    --user=n8n \
    --dbname=n8n \
    --host=127.0.0.1 \
    --quiet \
    --no-align \
    --tuples-only \
    -1 \
    --command="SELECT 1" \

healthcheck_interval = 0.1
healthcheck_retries = 100

[docker:fireflyiii]

image=fireflyiii/core:latest

; volumes =
;     bind:rw:{toxinidir}:/opt/gristfdw
links=fireflyiii_postgres:postgres
#links=n8n:n8n,fireflyiii_postgres:postgres
ports=8078:8080/tcp
environment =
    APP_KEY=WwkvoWu6IHtIFPCuIOo3zWOyDlqx48MW
    DB_HOST=postgres
    DB_PORT=5432
    DB_CONNECTION=pgsql
    DB_DATABASE=fireflyiii
    DB_USERNAME=fireflyiii
    DB_PASSWORD=secret
    AUTHENTICATION_GUARD=remote_user_guard
    AUTHENTICATION_GUARD_HEADER=HTTP_REMOTE_USER
    TRUSTED_PROXIES="**"
    ALLOW_WEBHOOKS=true
    APP_URL=http://localhost:8080

[docker:fireflyiii_nginx]

# We need this to set AUTHENTICATION_GUARD_HEADER to avoid having to log in
image=nginx

links=fireflyiii:backend
ports=8080:8079/tcp

volumes =
    bind:rw:{toxinidir}/nginx_fireflyiii.conf:/etc/nginx/nginx.conf



[docker:n8n]

image = n8nio/n8n
links=n8n_postgres:postgres
ports=5678:5678/tcp
environment =
      GENERIC_TIMEZONE="Europe/London"
      TZ="Europe/London"
      DB_TYPE=postgresdb
      DB_POSTGRESDB_DATABASE=n8n
      DB_POSTGRESDB_HOST=postgres
      DB_POSTGRESDB_PORT=5432
      DB_POSTGRESDB_USER=n8n
      DB_POSTGRESDB_SCHEMA=public
      DB_POSTGRESDB_PASSWORD=secret
      WEBHOOK_URL="https://n8n.cantboateng.house"
      N8N_LOG_LEVEL=info

[docker:grist]
image=gristlabs/grist
ports=8484:8484/tcp

volumes =
    bind:rw:{toxinidir}/grist_persist:/persist

links=fireflyiii:fireflyiii

environment =
    GRIST_DEFAULT_EMAIL=test@example.com
    GRIST_EXPERIMENTAL_PLUGINS=1
    GRIST_ENABLE_REQUEST_FUNCTION=1
#GRIST_SANDBOX_FLAVOR=unsandboxed

[testenv]
commands =
  pytest {posargs}

deps = 
  pytest
  requests
  psycopg2
  selenium
  pyquery
  grist_api

docker =
  fireflyiii_postgres
  fireflyiii
  fireflyiii_nginx
  grist

; # n8n_postgres
; # n8n
;   fireflyiii_postgres
;   fireflyiii
;   fireflyiii_nginx
